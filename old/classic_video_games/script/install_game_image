#!/usr/bin/env ruby

lib = File.expand_path('../../lib', __FILE__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)
require 'game_name'

require 'getoptlong'
require 'fileutils'

opts = GetoptLong.new(
  ['--help', '-h', GetoptLong::NO_ARGUMENT],
  ['--debug', '-d', GetoptLong::NO_ARGUMENT],
)
debug = false
opts.each do |opt, arg|
  case opt
  when '--help'
    puts <<-"END_HELP"
Installs game image files into web app (at app/assets/images/).
#{File.basename($0)} [options] [image_files ...]
OPTIONS:
  --help, -h:  Writes this help message and exits.
  --debug, -d: Turn on extra debug info (stderr).
    END_HELP
    exit
  when '--debug'
    debug = true
  end
end

dest_dir = File.expand_path('../../app/assets/images', __FILE__)
FileUtils.mkdir_p(dest_dir, :verbose => debug) unless Dir.exist?(dest_dir)

ARGV.each do |arg|
  unless File.exist?(arg)
    warn "No such file: #{arg}"
    next
  end

  ext = case File.extname(arg).downcase
        when '.jpeg', '.jpg'
          '.jpg'
        when '.gif'
          '.gif'
        when '.png'
          '.png'
        else
          warn "Unsupported image file ext: #{arg}"
          next
        end

  base = GameName.normalize(File.basename(arg, '.*'))
  dest_file = File.join(dest_dir, base + ext)
  FileUtils.cp(arg, dest_file, :verbose => debug)
end
